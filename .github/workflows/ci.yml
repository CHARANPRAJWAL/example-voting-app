name: CI Build and Deploy

on:
  push:
    branches: [main]
    paths:
      - 'vote/**'
      - 'result/**'
      - 'worker/**'
      - '.github/workflows/ci.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changes.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed services
        id: changes
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Initialize
          SERVICES=""

          if echo "$CHANGED_FILES" | grep -q "^vote/"; then
            SERVICES="${SERVICES:+$SERVICES }vote"
          fi

          if echo "$CHANGED_FILES" | grep -q "^result/"; then
            SERVICES="${SERVICES:+$SERVICES }result"
          fi

          if echo "$CHANGED_FILES" | grep -q "^worker/"; then
            SERVICES="${SERVICES:+$SERVICES }worker"
          fi

          # Workflow changed â†’ build all
          if [ -z "$SERVICES" ] && echo "$CHANGED_FILES" | grep -q "^\.github/workflows/ci\.yml$"; then
            SERVICES="vote result worker"
          fi

          # Fallback
          if [ -z "$SERVICES" ]; then
            SERVICES="vote result worker"
          fi

          # Convert to JSON array (compact)
          JSON_SERVICES=$(echo "$SERVICES" | jq -cR 'split(" ")')
          echo "Services to build: $SERVICES"
          echo "JSON format: $JSON_SERVICES"
          echo "services=$JSON_SERVICES" >> $GITHUB_OUTPUT


  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.services != '[]'
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    steps:
      - name: Debug matrix input
        run: |
          echo "Matrix service value: '${{ matrix.service }}'"
          echo "Matrix service length: $(echo '${{ matrix.service }}' | wc -c)"
          echo "Matrix service type: $(echo '${{ matrix.service }}' | jq -r 'type' 2>/dev/null || echo 'not json')"
    
      - name: Debug selected service
        run: "echo Selected service: ${{ matrix.service }}"


      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          docker build -t ghcr.io/charanprajwal/example-voting-app-ci/${{ matrix.service }}:latest \
                       -t ghcr.io/charanprajwal/example-voting-app-ci/${{ matrix.service }}:$SHORT_SHA ./${{ matrix.service }}

      - name: Push Docker images
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          docker push ghcr.io/charanprajwal/example-voting-app-ci/${{ matrix.service }}:latest
          docker push ghcr.io/charanprajwal/example-voting-app-ci/${{ matrix.service }}:$SHORT_SHA

      - name: Get image digest
        id: get_digest
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/charanprajwal/example-voting-app-ci/${{ matrix.service }}:${{ github.sha }})
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Checkout CD repo
        uses: actions/checkout@v4
        with:
          repository: CHARANPRAJWAL/example-voting-app-CD
          token: ${{ secrets.CD_REPO_TOKEN }}
          path: cd-repo

      - name: List manifest file
        run: |
          ls -l cd-repo
          cat cd-repo/${{ matrix.service }}-manifest.yaml

      - name: Update image tag in CD repo
        run: |
          manifest_file="${{ matrix.service }}-manifest.yaml"
          sed -i "s|image:.*|image: ghcr.io/charanprajwal/example-voting-app-ci/${{ matrix.service }}@${{ steps.get_digest.outputs.digest }}|" "cd-repo/$manifest_file"

          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git -C cd-repo add "$manifest_file"
          git -C cd-repo commit -m "Update ${{ matrix.service }} image to ${{ steps.get_digest.outputs.digest }}"
          git -C cd-repo pull --rebase
          git -C cd-repo push
